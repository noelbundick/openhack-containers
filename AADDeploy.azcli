aksname="BestTeamAKS"

serverApplicationId=$(az ad app create  --display-name "${aksname}Server" --identifier-uris "https://${aksname}Server" --query appId -o tsv)

# Update the application group memebership claims
az ad app update --id $serverApplicationId --set groupMembershipClaims=All


# Create a service principal for the Azure AD application
az ad sp create --id $serverApplicationId

# Get the service principal secret
serverApplicationSecret=$(az ad sp credential reset --name $serverApplicationId --credential-description "AKSPassword" --query password -o tsv)

az ad app permission add --id $serverApplicationId --api 00000003-0000-0000-c000-000000000000 --api-permissions e1fe6dd8-ba31-4d61-89e7-88639da4683d=Scope 06da0dbc-49e2-44d2-8312-53f166ab848a=Scope 7ab1d382-f21e-4acd-a863-ba3e13f7da61=Role

az ad app permission add --id $serverApplicationId --api 00000003-0000-0000-c000-000000000000 --api-permissions e1fe6dd8-ba31-4d61-89e7-88639da4683d=Scope 06da0dbc-49e2-44d2-8312-53f166ab848a=Scope 7ab1d382-f21e-4acd-a863-ba3e13f7da61=Role

az ad app permission grant --id 0a34ee37-e75e-47c8-8ef9-4e0d6ec170e2 --api 00000003-0000-0000-c000-000000000000

az ad app permission admin-consent --id  $serverApplicationId

clientApplicationId=$(az ad app create --display-name "${aksname}Client" --native-app --reply-urls "https://${aksname}Client" --query appId -o tsv)

az ad sp create --id $clientApplicationId

{
  "accountEnabled": "True",
  "addIns": [],
  "alternativeNames": [],
  "appDisplayName": "BestTeamAKSClient",
  "appId": "5de86dbf-2b21-45f1-9a30-140ff348a103",
  "appOwnerTenantId": "2a41c9ac-10a5-4984-ad23-e13a5018fc2e",
  "appRoleAssignmentRequired": false,
  "appRoles": [],
  "applicationTemplateId": null,
  "deletionTimestamp": null,
  "displayName": "BestTeamAKSClient",
  "errorUrl": null,
  "homepage": null,
  "informationalUrls": {
    "marketing": null,
    "privacy": null,
    "support": null,
    "termsOfService": null
  },
  "keyCredentials": [],
  "logoutUrl": null,
  "notificationEmailAddresses": [],
  "oauth2Permissions": [
    {
      "adminConsentDescription": "Allow the application to access BestTeamAKSClient on behalf of the signed-in user.",
      "adminConsentDisplayName": "Access BestTeamAKSClient",
      "id": "5903695a-68f4-48f2-91b1-b47870ba6ff1",
      "isEnabled": true,
      "type": "User",
      "userConsentDescription": "Allow the application to access BestTeamAKSClient on your behalf.",
      "userConsentDisplayName": "Access BestTeamAKSClient",
      "value": "user_impersonation"
    }
  ],
  "objectId": "cbc144b1-1246-46f7-aed8-8fe0d70d16c0",
  "objectType": "ServicePrincipal",
  "odata.metadata": "https://graph.windows.net/2a41c9ac-10a5-4984-ad23-e13a5018fc2e/$metadata#directoryObjects/@Element",
  "odata.type": "Microsoft.DirectoryServices.ServicePrincipal",
  "passwordCredentials": [],
  "preferredSingleSignOnMode": null,
  "preferredTokenSigningKeyEndDateTime": null,
  "preferredTokenSigningKeyThumbprint": null,
  "publisherName": "Opsgility LLC-PRD",
  "replyUrls": [
    "https://BestTeamAKSClient"
  ],
  "samlMetadataUrl": null,
  "samlSingleSignOnSettings": null,
  "servicePrincipalNames": [
    "5de86dbf-2b21-45f1-9a30-140ff348a103"
  ],
  "servicePrincipalType": "Application",
  "signInAudience": "AzureADMyOrg",
  "tags": [],
  "tokenEncryptionKeyId": null
}

oAuthPermissionId=$(az ad app show --id $serverApplicationId --query "oauth2Permissions[0].id" -o tsv)

tenantId=$(az account show --query tenantId -o tsv)

az ad app permission add --id $clientApplicationId --api $serverApplicationId --api-permissions $oAuthPermissionId=Scope
az ad app permission grant --id $clientApplicationId --api $serverApplicationId


# FInd the VNET ID:
az network vnet subnet list --resource-group teamResources --vnet-name vnet --query [].id --output tsv

# /subscriptions/b59213bd-a592-44a1-8a94-b56694e27536/resourceGroups/teamResources/providers/Microsoft.Network/virtualNetworks/vnet/subnets/vm-subnet

az aks create --resource-group teamResources --name $aksname --node-count 4 --generate-ssh-keys --aad-server-app-id $serverApplicationId --aad-server-app-secret $serverApplicationSecret --aad-client-app-id $clientApplicationId --aad-tenant-id $tenantId --network-plugin azure --vnet-subnet-id /subscriptions/b59213bd-a592-44a1-8a94-b56694e27536/resourceGroups/teamResources/providers/Microsoft.Network/virtualNetworks/vnet/subnets/vm-subnet --docker-bridge-address 172.17.0.1/16 --dns-service-ip 10.2.0.10 --service-cidr 10.2.0.0/24 

az aks get-credentials --resource-group teamResources --name $aksname --admin


az aks create --resource-group teamResources --name BadAKS --node-count 4 --generate-ssh-keys --aad-server-app-id $serverApplicationId --aad-server-app-secret $serverApplicationSecret --aad-client-app-id $clientApplicationId --aad-tenant-id $tenantId --network-plugin azure --vnet-subnet-id /subscriptions/b59213bd-a592-44a1-8a94-b56694e27536/resourceGroups/teamResources/providers/Microsoft.Network/virtualNetworks/vnet/subnets/vm-subnet --docker-bridge-address 172.17.0.1/16 --dns-service-ip 10.0.0.250 --service-cidr 10.0.0.0/24 